AC_PREREQ([2.61])
AC_INIT([Scroom],
        m4_esyscmd([build-aux/git-version-gen | tr -d '\n']),
        [http://fuzzy.homedns.org/trac/scroom/newticket],
        [scroom],
        [http://fuzzy.homedns.org/trac/scroom])
AM_INIT_AUTOMAKE
# LT_PREREQ([2.2])
# LT_INIT([dlopen])

AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_SRCDIR([inc/presentationinterface.hh])
AC_CONFIG_HEADERS([config.h])

# Checks for programs.
AC_PROG_CXX
dnl AC_PROG_CC
AC_PROG_LN_S
AC_PROG_LIBTOOL
dnl AC_PROG_INSTALL

AC_LANG([C++])

# Configurable features
AC_ARG_ENABLE([mutracx-hacks],
  [  --enable-mutracx-hacks  Build for a Mutracx environment],
  [want_mutracx_hacks=${enableval}],
  [want_mutracx_hacks=no])

# Checks for packages.
pkg_modules="gtk+-2.0 >= 2.0.0, gthread-2.0, libglade-2.0 glib-2.0 cairo"
PKG_CHECK_MODULES(PACKAGE, [$pkg_modules])
AC_SUBST(PACKAGE_CFLAGS)
AC_SUBST(PACKAGE_LIBS)

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS([stdlib.h string.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_INLINE
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_CHECK_FUNCS([memset pow select sqrt strerror])

# Mutracx specifics:
need_mutracx_hacks=no
if pkg-config "gtk+-2.0 >= 2.16.0"
then
  need_mutracx_hacks=no
else
  need_mutracx_hacks=yes
fi

# Checking for boost
have_boost_thread_headers=no
AC_CHECK_HEADERS([boost/thread.hpp boost/thread/mutex.hpp], [have_boost_thread_headers=yes])
have_boost_thread_lib=no
# boost_thread-gcc42-mt is the name used at Mutracx...
AC_SEARCH_LIBS([_ZN5boost6thread6detachEv], [boost_thread-mt boost_thread-gcc42-mt], [have_boost_thread_lib=yes])

# Some sanity checks
have_all_dependencies=yes
if test "x${have_boost_thread_headers}" = xno
then
  echo "ERROR: Boost thread header files not found. Cannot continue"
  have_all_dependencies=no
fi
if test "x${have_boost_thread_lib}" = xno
then
  echo "ERROR: Boost thread library not found. Cannot continue"
  have_all_dependencies=no
fi
if test "x${need_mutracx_hacks}" = xyes
then
  if test "x${want_mutracx_hacks}" = xno
  then
    echo "WARNING: Mutracx environment detected. Enabling mutracx-hacks"
    want_mutracx_hacks=yes
  fi
fi

# Some defines
if test "x${want_mutracx_hacks}" = xyes
then
  AC_DEFINE([MUTRACX_HACKS], 1, [Hacks for Mutracx environment enabled])
fi

# Bail out if necessary
if test "x${have_all_dependencies}" = xno
then
  exit 1
fi



# GetText
dnl GETTEXT_PACKAGE=scroom
dnl AC_SUBST(GETTEXT_PACKAGE)
dnl AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package.])
dnl 
dnl dnl Add the languages which your application supports here.
dnl ALL_LINGUAS=""
dnl AM_GLIB_GNU_GETTEXT


AC_CONFIG_FILES([Makefile
                 inc/Makefile
                 libs/Makefile
                 libs/threadpool/Makefile
                 libs/tiled-bitmap/Makefile
                 plugins/Makefile
                 plugins/colormap/Makefile
                 plugins/example/Makefile
                 plugins/tiff/Makefile
                 gui/Makefile
                 gui/ENVIRONMENT
                 gui/src/Makefile
])

dnl                  libs/memory-manager/Makefile

# Misc defines
AC_SUBST([plugindir], [$libdir/$PACKAGE])

AC_OUTPUT

echo \
"-------------------------------------------------

 ${PACKAGE_NAME} Version ${PACKAGE_VERSION}

 Prefix:   '${prefix}'.
 Compiler: '${CC} ${CFLAGS} ${CPPFLAGS}'
           '${CXX} ${CXXFLAGS} ${CPPFLAGS}'

 Package features:
   Mutracx hacks: ${want_mutracx_hacks}

 Now type 'make @<:@<target>@:>@'
   where the optional <target> is:
     all                - build all binaries
     install            - install everything

--------------------------------------------------"


